/* Q + A
1.	How do we assign a value to a variable?
  With the use of the keywords 'let' or 'const' one can assign a value to a variable. 

2.	How do we change the value of a variable?
  The value can be change by calling the variable and assign it a differe value. 

3.	How do we assign an existing variable to a new variable?
  One would need to create a new variable and assign the existing variable.
4.	Remind me, what are declare, assign, and define?
  When one declare uses keyboard, assign uses is the equals operator, and 

5.	What is pseudo-coding and why should you do it?
  Pseudo-coding is createing a basic structure of a code. No specific terms are use when pseudo coding.

6.	What percentage of time should be spent thinking about how you're going to solve a problem vs actually typing in code to solve it?
  '60 - 40'
*/

// B. Strings
let firstVariable = 'Hello World';
firstVariable = 5;
let secondVariable = firstVariable;
secondVariable = 'World Hello';
let yourName = 'Salvador';
function printText() {
  console.log(`Hello, my name is ${yourName}`);
}

//C. Booleans
const a = 4;
const b = 53;
const c = 57;
const d = 16;
const e = 'Kevin';
/*
console.log(a < b);
console.log(c > d);
console.log('Name' == 'Name');
// FOR THE NEXT TWO, USE ONLY && OR ||
console.log(true || false);
console.log(false && false || false && false && false || true);
console.log(false == false);
console.log(e === 'Kevin');
console.log(a + b == c); // note: a < b < c is NOT CORRECT (and is not a valid JS expression, think about using other math operations)
console.log(a * a === d); // note: the answer is a simple arithmetic equation, not something "weird"
console.log(48 == '48');
*/

// D. The Farm

let animal = 'cow';

// E. Driver's Ed
let personAge = 16;
function ableToDrive(personAge) {
  if (personAge >= 16) {
    console.log('Here are the keys!');
  }
  else {
    console.log('Sorry, you\'too young.');
  }
}

// ableToDrive(personAge);

//II.Loops

// A. The Basics

function oneToTen() {
  for (let index = 0; index < 11; index++) {
    console.log(index);
  }
}

// oneToTen();

function tenTo() {
  for (let index = 10; index <= 400; index++) {
    console.log(index);
  }
}

// tenTo();

function thridNum() {
  for (let index = 12; index < 400; index++) {
    if (index % 3 === 0) {
      console.log(index);
    }
  }
}

// thridNum();

// B. Get Even
function evenNum() {
  for (let index = 1; index <= 100; index++) {
    if (index % 2 === 0) {
      console.log(`${index} is and even number.`)
    }
  }
}

// evenNum();

// C. Give me Five
function fiveHigh() {
  for (let index = 0; index <= 100; index++) {
    if (index % 5 === 0) {
      console.log(`I found a ${index}. High Five!`);
    } else if (index % 3 === 0) {
      console.log(`I found a ${index}. Three is a crowd.`);
    }
  }
  for (index = 0; index <= 100; index++) {
    if (index % 3 === 0 && index % 5 === 0) {
      console.log(`I found a ${index}. Three is a crowd. I found a ${index}. High Five!`)
    }
  }
}

// fiveHigh();

// D. Saving Account

function sumsOfAll() {
  let shell = 0;
  for (let index = 1; index <= 10; index++) {
    console.log(shell += index);
  }
}

// sumsOfAll();

function doubleSum() {
  let shell = 0;
  for (let index = 1; index <= 100; index++) {
    console.log(shell += (index + index))
  }
}

// doubleSum()

// III. Arrays & Control Flow

// A. Talk about it
/*
1.	What are the things in an array called?
  They are called objects
2.	Do Arrays guarantee those things will be in order?
  Yes, they are index.
3.	What real-life thing could you model with an array?
  A grocery list
*/

// B.Easy Does It

let quotes = ['quote1', 'quote2', 'quote3'];

// C.Accessing Elements
const randomThings = [1, 10, "Hello", true];
randomThings[2] = "World";
// console.log(randomThings);

// D.Change Values
const ourClass = ["Salty", "Zoom", "Sardine", "Slack", "Github"];

// 1.	What would you write to access the 3rd element of the array?
// console.log(ourClass[2]);
// 2.	Change the value of "Github" to "Octocat"
// ourClass[4] = "Octocat";
// console.log(ourClass);
// 3.	Add a new element, "Cloud City" to the array
// ourClass[5] = "Cloud City";
// console.log(ourClass);

// E.Mix It Up

const myArray = [5, 10, 500, 20];

// 1.	Add the string "Aegon" to the end of the array. Add another string of your choice to the end of the array.
// myArray[4] = "Aegon";
// myArray[5] = "Test";
// console.log(myArray);
// 2.	Remove the 5from the beginning of the array.
// myArray.shift();
// console.log(myArray);
// 3.	Add the string "Bob Marley"to the beginning of the array.
// myArray[0] = "Bob Marley";
// console.log(myArray);
// 4.	Remove the string of your choice from the end of the array.
// myArray.pop();
// console.log(myArray);
// 5.	Reverse this array using Array.prototype.reverse(). Did you mutate the array? What does mutate mean? Did the .reverse()method return anything?
// console.log (myArray.reverse());
// console.log (myArray[0]);

// F.Biggie Smalls
// let intg = 100;

// if (intg < 100){
//   console.log('little number');
// }else {
//   console.log('Big number')
// }

// G.Monkey In The Middle

// let varNum =6 ;

// if (varNum < 5){
//   console.log ('litter number');
// } else if(varNum > 10){
//   console.log('big number');
// }else {
//   console.log("monkey");
// }

// H. What's in your Closet?

const kristynsCloset = [
  "left shoe",
  "cowboy boots",
  "right sock",
  "Per Scholas hoodie",
  "green pants",
  "yellow knit hat",
  "marshmallow peeps"
];
// Thom's closet is more complicated. Check out this nested data structure!!
const thomsCloset = [
  [
    // These are Thom's shirts
    "grey button-up",
    "dark grey button-up",
    "light blue button-up",
    "blue button-up",
  ], [
    // These are Thom's pants
    "grey jeans",
    "jeans",
    "PJs"
  ], [
    // Thom's accessories
    "wool mittens",
    "wool scarf",
    "raybans"
  ]
];


// 1.	What's Kristyn wearing today? Using bracket notation to access items in kristynsCloset, log the sentence "Kristyn is rocking that " + the third item in Kristyn's closet + " today!" to the console.
// console.log(`Kristyn is rocking that ${kristynsCloset[2]} today!`);

// 2.	Kristyn just bought some sweet shades! Add "raybans"to her closet after "yellow knit hat".
// kristynsCloset[7] = "raybans";
// console.log(kristynsCloset);

// 3.	Kristyn spilled coffee on her hat... modify this item to read "stained knit hat"instead of yellow.
// kristynsCloset[5] = "Stained knit hat";
// console.log(kristynsCloset);

// 4.	Put together an outfit for Thom! Using bracket notation, access the first element in Thom's shirtsarray.
// console.log(`${thomsCloset[0][0]}`);

// 5.	In the same way, access one item from Thom's pants array.
// console.log(`${thomsCloset[1][0]}`);

// 6.	Access one item from Thom's accessories array.
// console.log(`${thomsCloset[2][0]}`);

// 7.	Log a sentence about what Thom's wearing. Example: "Thom is looking fierce in a grey button-up, jeans and wool scarf!"
// console.log(`Thom's is wearing a ${thomsCloset[0][0]}, ${thomsCloset[1][0]}, and ${thomsCloset[2][0]}`);

// 8.	Get more specific about what kind of PJs Thom's wearing this winter. Modify the name of his PJ pants to Footie Pajamas.
thomsCloset[1][2] = "Footie Pajamas";
// console.log(thomsCloset[1]);

// IV. Functions

// A. Print  
let printGreeting = (name) => {
  return `Hello there, ${name}`
}

// console.log(printGreeting("Slimmer"));

// B. Print Cool
let printCool = (name) => {
  return `${name} is cool`;
}

// console.log(printCool('Captain Reynolds'));

// C. CalculateCube
let calculateCube = (number) => {
  return number = number ** 3;
}

// console.log(calculateCube(5))

// D.isVowel

let isVowel = (vowel) => {
  if (vowel.toLowerCase() === 'a' ||
    vowel.toLowerCase() === 'e' ||
    vowel.toLowerCase() === 'i' ||
    vowel.toLowerCase() === 'o' ||
    vowel.toLowerCase() === 'u') {
    console.log(vowel, 'It\'s a vowel');
  } else {
    console.log(vowel, 'It\'s not a vowel')
  }
}

// isVowel("b");

// E. getTwoLengths

let getTwoLengths = (stringOne, stringTwo) => {
  let numOne = stringOne.length;
  let numTwo = stringTwo.length;
  return array = [numOne, numTwo];
}

// console.log(getTwoLengths("Hank", "Hippopopalous"));


// F. getMultipleLengths
let getMultipleLengths = (name) => {
  let arr = [];
  for (let index = 0; index < name.length; index++) {
    arr[index] = name[index].length;
  }
  return arr;
}

// getMultipleLengths(["hello", "what"])
// console.log(getMultipleLengths(["hello", "what", "is", "up", "dude"]));

// G. 

let maxOfThree = (nOne, nTwo, nThree) => {
  if (nOne < nTwo) {
    if (nTwo < nThree) {
      return nThree;
    } else {
      return nTwo;
    }
  } else if (nOne < nThree) {
    return nThree;
  }
  else {
    return nOne;
  }
}

// console.log(maxOfThree(6, 9, 1));
// console.log(maxOfThree(0, 0, 1));

// H. printLongestWord

const printLongestWord = (arr) => {
  let shell = '';
  for (let index = 0; index < arr.length; index++) {
    if (shell.length < arr[index].length) {
      shell = arr[index];
    }
    else {
      shell;
    }
  }
  return shell;
}

// console.log(printLongestWord(["BoJack", "Princess", "Diane", "a", "Max", "Peanutbutter", "big", "Todd"]));

// OBJECTS


// A. Make a user object

const user = {
  name: 'John Smith',
  email: 'email@fake.com',
  age: 0,
  purchase: []
}

// B. Update the user 
// 1.
// console.log(user);
// user.email = 'email@new.com';
// console.log(user);

// 2.
// console.log(user);
// user.age++;
// console.log(user);

// C. Adding keys and values

user.location = 'NY';
// console.log(user);

// D. Shopaholic

// 1.
user.purchase.push('carbohydrates');
// console.log(user);
// 2.
user.purchase.push('peace of mind');
// console.log(user);
// 3.
user.purchase.push('Merino jodhpurs');
console.log(user);

user.friend = {
  name: 'Jane Smith',
  age: 1,
  location: 'NJ',
  purchased: []
}

console.log(user.friend.name);
console.log(user.friend.location);
user.friend.age = 55;
user.friend.purchased.push('The One Ring');
user.friend.purchased.push('A latte');
// console.log(user.friend.purchased[1]);

// F. Loops
// 1.
// for(let index = 0; index < user.purchase.length; index++){
//   console.log(user.purchase[index]);
// }

// 2.
let friendItems = () => {
  for (let index = 0; index < user.friend.purchased.length; index++) {
    console.log(user.friend.purchased[index]);
  }
}

// friendItems();

// G. Functions can operate on objects

let updateUser = () => {
  user.age++;
  user.name = user.name.toUpperCase();
}

// updateUser();
// console.log(user);

let oldAndLoud = (person) => {
  person.age++;
  person.name = person.name.toUpperCase();
}

oldAndLoud(user);
console.log(user);
